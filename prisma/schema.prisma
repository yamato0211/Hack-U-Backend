generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model comments {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  message    String?
  created_at DateTime @default(now()) @db.Timestamptz(6)
  updated_at DateTime @default(now()) @db.Timestamptz(6)
  userEmail  String
  ideaID     String   @db.Uuid
  ideas      ideas    @relation(fields: [ideaID], references: [id], onUpdate: Restrict)
  users      users    @relation(fields: [userEmail], references: [email], onUpdate: Restrict)
}

model ideas {
  id                          String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title                       String
  caption                     String
  lineID                      String     @unique
  author                      String?
  status                      String
  views                       Int        @default(0)
  created_at                  DateTime   @default(now()) @db.Timestamptz(6)
  updated_at                  DateTime   @default(now()) @db.Timestamptz(6)
  userEmail                   String?
  comments                    comments[]
  status_ideas_statusTostatus status     @relation("ideas_statusTostatus", fields: [status], references: [type], onUpdate: Restrict)
  users                       users?     @relation(fields: [userEmail], references: [email], onDelete: Restrict, onUpdate: Restrict)
  likes                       likes[]
}

model likes {
  userEmail String
  ideaID    String @db.Uuid
  ideas     ideas  @relation(fields: [ideaID], references: [id], onUpdate: Restrict)
  users     users  @relation(fields: [userEmail], references: [email], onUpdate: Restrict)

  @@id([userEmail, ideaID])
}

model messages {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  message    String
  sernderID  String
  receverID  String
  created_at DateTime @default(now()) @db.Timestamptz(6)
  updated_at DateTime @default(now()) @db.Timestamptz(6)
}

model status {
  type                       String  @id
  ideas_ideas_statusTostatus ideas[] @relation("ideas_statusTostatus")
}

model users {
  email         String     @id
  name          String?
  picture       String?
  description   String?
  isEmailPublic Boolean    @default(false)
  created_at    DateTime   @default(now()) @db.Timestamptz(6)
  updated_at    DateTime   @default(now()) @db.Timestamptz(6)
  comments      comments[]
  ideas         ideas[]
  likes         likes[]
}
